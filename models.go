// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package main

import (
	"time"

	"github.com/dtluat125/go-project/internal/database"
	"github.com/google/uuid"
)

type User struct {
	ID        uuid.UUID `json:"id"`
	Email     string  	`json:"email"`
	Password  string	`json:"password"`
	Name      string	`json:"name"`
	CreatedAt time.Time	`json:"created_at"`
	UpdatedAt time.Time	`json:"updated_at"`
	ApiKey    string	`json:"api_key"`
}

type Feed struct {
	ID        uuid.UUID `json:"id"`
	UserID    uuid.UUID	`json:"user_id"`
	Title     string	`json:"title"`
	Url       string	`json:"url"`
	CreatedAt time.Time	`json:"created_at"`
	UpdatedAt time.Time	`json:"updated_at"`
}

type FeedFollow struct {
	ID        uuid.UUID	`json:"id"`
	UserID    uuid.UUID	`json:"user_id"`
	FeedID    uuid.UUID	`json:"feed_id"`
	CreatedAt time.Time	`json:"created_at"`
	UpdatedAt time.Time	`json:"updated_at"`
}

func databaseUserToAPIUser(user database.User) User {
	return User{
		ID:        user.ID,
		Email:     user.Email,
		Password:  user.Password,
		Name:      user.Name,
		CreatedAt: user.CreatedAt,
		UpdatedAt: user.UpdatedAt,
		ApiKey:    user.ApiKey,
	}
}

func databaseFeedToAPIFeed(feed database.Feed) Feed {
	return Feed{
		ID:        feed.ID,
		UserID:    feed.UserID,
		Title:     feed.Title,
		Url:       feed.Url,
		CreatedAt: feed.CreatedAt,
		UpdatedAt: feed.UpdatedAt,
	}
}

func databaseFeedFollowToAPIFeedFollow(feedFollow database.FeedFollow) FeedFollow {
	return FeedFollow{
		ID:        feedFollow.ID,
		UserID:    feedFollow.UserID,
		FeedID:    feedFollow.FeedID,
		CreatedAt: feedFollow.CreatedAt,
		UpdatedAt: feedFollow.UpdatedAt,
	}
}